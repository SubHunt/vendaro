# Generated by Django 5.2.7 on 2025-10-04 11:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("stores", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Menu",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="updated"),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal name (e.g. Main Menu, Footer Menu)",
                        max_length=100,
                        verbose_name="name",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        choices=[
                            ("header", "Header"),
                            ("footer", "Footer"),
                            ("sidebar", "Sidebar"),
                            ("mobile", "Mobile"),
                        ],
                        default="header",
                        max_length=20,
                        verbose_name="location",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="menus",
                        to="stores.store",
                        verbose_name="store",
                    ),
                ),
            ],
            options={
                "verbose_name": "menu",
                "verbose_name_plural": "menus",
                "ordering": ["location", "name"],
                "unique_together": {("store", "location")},
            },
        ),
        migrations.CreateModel(
            name="MenuItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Menu item title",
                        max_length=100,
                        verbose_name="title",
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        help_text="URL or path (e.g. /products/ or https://...)",
                        max_length=255,
                        verbose_name="URL",
                    ),
                ),
                (
                    "open_in_new_tab",
                    models.BooleanField(default=False, verbose_name="open in new tab"),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="order")),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "menu",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="cms.menu",
                        verbose_name="menu",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="cms.menuitem",
                        verbose_name="parent item",
                    ),
                ),
            ],
            options={
                "verbose_name": "menu item",
                "verbose_name_plural": "menu items",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="updated"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="is deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, unique=True, verbose_name="slug"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                (
                    "excerpt",
                    models.TextField(
                        help_text="Short description for blog list",
                        max_length=500,
                        verbose_name="excerpt",
                    ),
                ),
                ("content", models.TextField(verbose_name="content")),
                (
                    "featured_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="blog/%Y/%m/",
                        verbose_name="featured image",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Blog category (e.g. News, Guides, Reviews)",
                        max_length=100,
                        verbose_name="category",
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated tags",
                        max_length=255,
                        verbose_name="tags",
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="published"
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="published at"
                    ),
                ),
                (
                    "views_count",
                    models.PositiveIntegerField(default=0, verbose_name="views count"),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="meta title"
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(blank=True, verbose_name="meta description"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="blog_posts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="author",
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="stores.store",
                        verbose_name="store",
                    ),
                ),
            ],
            options={
                "verbose_name": "blog post",
                "verbose_name_plural": "blog posts",
                "ordering": ["-published_at", "-created"],
                "indexes": [
                    models.Index(fields=["slug"], name="cms_blogpos_slug_19f322_idx"),
                    models.Index(
                        fields=["is_published", "-published_at"],
                        name="cms_blogpos_is_publ_ab0fa1_idx",
                    ),
                    models.Index(
                        fields=["store", "is_published"],
                        name="cms_blogpos_store_i_7fa699_idx",
                    ),
                    models.Index(
                        fields=["category"], name="cms_blogpos_categor_db6ae3_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="updated"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="is deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, unique=True, verbose_name="slug"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                ("content", models.TextField(verbose_name="content")),
                (
                    "is_published",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="published"
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="published at"
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="meta title"
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(blank=True, verbose_name="meta description"),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="order")),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="stores.store",
                        verbose_name="store",
                    ),
                ),
            ],
            options={
                "verbose_name": "page",
                "verbose_name_plural": "pages",
                "ordering": ["order", "title"],
                "indexes": [
                    models.Index(fields=["slug"], name="cms_page_slug_f9a361_idx"),
                    models.Index(
                        fields=["is_published"], name="cms_page_is_publ_00a054_idx"
                    ),
                    models.Index(
                        fields=["store", "is_published"],
                        name="cms_page_store_i_3a60e9_idx",
                    ),
                ],
            },
        ),
    ]
