# Generated by Django 5.2.7 on 2025-10-04 11:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="updated"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True, default=False, verbose_name="is deleted"
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="deleted at"
                    ),
                ),
                (
                    "domain",
                    models.CharField(
                        db_index=True,
                        help_text="Domain name: deepreef.ru",
                        max_length=255,
                        unique=True,
                        verbose_name="domain",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name: DeepReef",
                        max_length=200,
                        verbose_name="store name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="slug"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Short description of the store",
                        verbose_name="description",
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="email")),
                ("phone", models.CharField(max_length=20, verbose_name="phone")),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="address"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="city"),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="postal code"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="RU", max_length=2, verbose_name="country"
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="stores/logos/",
                        verbose_name="logo",
                    ),
                ),
                (
                    "favicon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="stores/favicons/",
                        verbose_name="favicon",
                    ),
                ),
                (
                    "primary_color",
                    models.CharField(
                        default="#0A2463",
                        help_text="Brand primary color in HEX: #0A2463",
                        max_length=7,
                        verbose_name="primary color",
                    ),
                ),
                (
                    "secondary_color",
                    models.CharField(
                        default="#14B8A6",
                        help_text="Brand secondary color in HEX: #14B8A6",
                        max_length=7,
                        verbose_name="secondary color",
                    ),
                ),
                (
                    "enable_wholesale",
                    models.BooleanField(
                        default=False,
                        help_text="Allow wholesale (B2B) sales",
                        verbose_name="enable wholesale",
                    ),
                ),
                (
                    "wholesale_discount_percent",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Global wholesale discount percentage (0-100)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="wholesale discount %",
                    ),
                ),
                (
                    "min_wholesale_order",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Minimum order amount for wholesale customers",
                        max_digits=10,
                        verbose_name="minimum wholesale order",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("RUB", "₽ Russian Ruble"),
                            ("USD", "$ US Dollar"),
                            ("EUR", "€ Euro"),
                            ("GBP", "£ British Pound"),
                        ],
                        default="RUB",
                        max_length=3,
                        verbose_name="currency",
                    ),
                ),
                (
                    "currency_symbol",
                    models.CharField(
                        default="₽", max_length=5, verbose_name="currency symbol"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Is this store active and visible to customers",
                        verbose_name="active",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True,
                        help_text="SEO title (shown in search results)",
                        max_length=200,
                        verbose_name="meta title",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True,
                        help_text="SEO description (shown in search results)",
                        verbose_name="meta description",
                    ),
                ),
                (
                    "google_analytics_id",
                    models.CharField(
                        blank=True,
                        help_text="G-XXXXXXXXXX or UA-XXXXXXXXX-X",
                        max_length=50,
                        verbose_name="Google Analytics ID",
                    ),
                ),
                (
                    "yandex_metrika_id",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Yandex Metrika ID"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_stores",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "store",
                "verbose_name_plural": "stores",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="StoreSettings",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="updated"),
                ),
                (
                    "store",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="settings",
                        serialize=False,
                        to="stores.store",
                        verbose_name="store",
                    ),
                ),
                (
                    "enable_free_shipping",
                    models.BooleanField(
                        default=False, verbose_name="enable free shipping"
                    ),
                ),
                (
                    "free_shipping_threshold",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Order amount for free shipping",
                        max_digits=10,
                        verbose_name="free shipping threshold",
                    ),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="shipping cost",
                    ),
                ),
                (
                    "min_order_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="minimum order amount",
                    ),
                ),
                (
                    "max_order_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=1000000,
                        max_digits=10,
                        verbose_name="maximum order amount",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="tax rate %",
                    ),
                ),
                (
                    "tax_included",
                    models.BooleanField(
                        default=True, verbose_name="tax included in prices"
                    ),
                ),
                (
                    "order_notification_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email to receive new order notifications",
                        max_length=254,
                        verbose_name="order notification email",
                    ),
                ),
                (
                    "send_order_confirmation",
                    models.BooleanField(
                        default=True, verbose_name="send order confirmation"
                    ),
                ),
                (
                    "terms_and_conditions",
                    models.TextField(blank=True, verbose_name="terms and conditions"),
                ),
                (
                    "privacy_policy",
                    models.TextField(blank=True, verbose_name="privacy policy"),
                ),
                (
                    "return_policy",
                    models.TextField(blank=True, verbose_name="return policy"),
                ),
            ],
            options={
                "verbose_name": "store settings",
                "verbose_name_plural": "store settings",
            },
        ),
        migrations.CreateModel(
            name="StoreSocialMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("instagram", "Instagram"),
                            ("facebook", "Facebook"),
                            ("vk", "VKontakte"),
                            ("youtube", "YouTube"),
                            ("telegram", "Telegram"),
                            ("tiktok", "TikTok"),
                            ("twitter", "Twitter/X"),
                        ],
                        max_length=20,
                        verbose_name="platform",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="Full URL to your social media profile",
                        verbose_name="URL",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Order in which to display (lower = first)",
                        verbose_name="display order",
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_media",
                        to="stores.store",
                        verbose_name="store",
                    ),
                ),
            ],
            options={
                "verbose_name": "social media",
                "verbose_name_plural": "social media",
                "ordering": ["order"],
            },
        ),
        migrations.AddIndex(
            model_name="store",
            index=models.Index(fields=["domain"], name="stores_stor_domain_9b7928_idx"),
        ),
        migrations.AddIndex(
            model_name="store",
            index=models.Index(fields=["slug"], name="stores_stor_slug_e2ab60_idx"),
        ),
        migrations.AddIndex(
            model_name="store",
            index=models.Index(
                fields=["is_active"], name="stores_stor_is_acti_12939d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="storesocialmedia",
            unique_together={("store", "platform")},
        ),
    ]
