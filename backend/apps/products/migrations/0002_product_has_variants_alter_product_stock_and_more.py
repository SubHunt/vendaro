# Generated by Django 5.2.7 on 2025-10-18 12:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("products", "0001_initial"),
        ("stores", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="product",
            name="has_variants",
            field=models.BooleanField(
                default=False,
                help_text="Товар имеет варианты (размеры, цвета и т.д.)",
                verbose_name="имеет варианты",
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="stock",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Available quantity in stock (если нет вариантов)",
                verbose_name="stock quantity",
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="views_count",
            field=models.PositiveIntegerField(default=0, verbose_name="views"),
        ),
        migrations.CreateModel(
            name="Size",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("clothing", "Одежда (XXS-XXXXL)"),
                            ("footwear", "Обувь (размеры)"),
                            ("range", "Диапазон размеров"),
                        ],
                        help_text="Тип размерной сетки",
                        max_length=20,
                        verbose_name="тип размера",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="Значение размера (XL, 42, 40-41)",
                        max_length=20,
                        verbose_name="значение",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Порядок отображения (меньше = выше)",
                        verbose_name="порядок",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="активен"),
                ),
            ],
            options={
                "verbose_name": "размер",
                "verbose_name_plural": "размеры",
                "ordering": ["type", "order", "value"],
                "indexes": [
                    models.Index(
                        fields=["type", "is_active"], name="products_si_type_08b3de_idx"
                    )
                ],
                "unique_together": {("type", "value")},
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="created"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="updated"),
                ),
                (
                    "stock",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Количество на складе для этого размера",
                        verbose_name="остаток",
                    ),
                ),
                (
                    "price_override",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Если цена отличается от базовой цены товара",
                        max_digits=10,
                        null=True,
                        verbose_name="переопределённая цена",
                    ),
                ),
                (
                    "wholesale_price_override",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Оптовая цена для этого варианта",
                        max_digits=10,
                        null=True,
                        verbose_name="переопределённая оптовая цена",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        blank=True,
                        help_text="Артикул варианта (например, WETSUIT-5MM-M)",
                        max_length=100,
                        verbose_name="артикул",
                    ),
                ),
                (
                    "barcode",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="штрих-код"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Доступен ли вариант для заказа",
                        verbose_name="активен",
                    ),
                ),
                (
                    "sales_count",
                    models.PositiveIntegerField(default=0, verbose_name="продано"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="products.product",
                        verbose_name="товар",
                    ),
                ),
                (
                    "size",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="variants",
                        to="products.size",
                        verbose_name="размер",
                    ),
                ),
            ],
            options={
                "verbose_name": "вариант товара",
                "verbose_name_plural": "варианты товаров",
                "ordering": ["product", "size__order"],
            },
        ),
        migrations.AddField(
            model_name="product",
            name="sizes",
            field=models.ManyToManyField(
                blank=True,
                related_name="products",
                through="products.ProductVariant",
                to="products.size",
                verbose_name="размеры",
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["has_variants"], name="products_pr_has_var_bc024c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productvariant",
            index=models.Index(
                fields=["product", "is_active"], name="products_pr_product_66459e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productvariant",
            index=models.Index(fields=["sku"], name="products_pr_sku_dcab68_idx"),
        ),
        migrations.AddIndex(
            model_name="productvariant",
            index=models.Index(fields=["stock"], name="products_pr_stock_c72f45_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="productvariant",
            unique_together={("product", "size")},
        ),
    ]
